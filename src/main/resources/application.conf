akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "target/learning/journal"

akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir =  "target/learning/snapshots"

localStores {

    akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
    akka.persistence.journal.leveldb.dir = "target/localStores/journal"

    akka.persistence.journal.leveldb.compaction-interval = {
      "simple-persistent-actor" = 1000
      "*" = 5000
    }

    akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    akka.persistence.snapshot-store.local.dir =  "target/localStores/snapshots"

}

#local leveldb, saves in journal, file based key-value store by Google, not suited for production
#Local SnapShot store are also filed based, can writes anything Serializable (i.e can be turned to Bytes) will
#be simply dumped in the store.

postgresDemo {
  akka.persistence.journal.plugin = "jdbc-journal"
  akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

  akka-persistence-jdbc {
    shared-databases {
      slick {
        profile = "slick.jdbc.PostgresProfile$"
        db {
          numThreads = 10
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://localhost:5432/rtjvm"
          user = "docker"
          password = "docker"
        }
      }
    }
  }

  jdbc-journal {
    use-shared-db = "slick"
  }

  jdbc-snapshot-store {
    use-shared-db = "slick"
  }
}

cassandraDemo {
       akka.persistence.journal.plugin = "cassandra-journal"
       akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
}

customSerializerDemo {

  akka.persistence.journal.plugin = "jdbc-journal"
  akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

  akka-persistence-jdbc {
    shared-databases {
      slick {
        profile = "slick.jdbc.PostgresProfile$"
        db {
          numThreads = 10
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://localhost:5432/rtjvm"
          user = "docker"
          password = "docker"
        }
      }
    }
  }

  jdbc-journal {
    use-shared-db = "slick"
  }

  jdbc-snapshot-store {
    use-shared-db = "slick"
  }

    akka.actor {
      serializers {
        java = "akka.serialization.JavaSerializer"
        myserializer = "learning.stores_serialization.UserRegistrationSerializer"
      }

      serialization-bindings {
        "learning.stores_serialization.UserRegistered" = myserializer
        #java serializer is used by default
      }
    }
}